cmake_minimum_required(VERSION PLACEHOLDER_CMAKE_VERSION)

project(PLACEHOLDER)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

set(PLACEHOLDER_USE_INTEL_TBB OFF CACHE BOOL "Use Intel TBB for parallel computations")
if(${PLACEHOLDER_USE_INTEL_TBB})
    set(GLOBAL_DEFINITIONS ${GLOBAL_DEFINITIONS} -DUSE_TBB
)
endif()

set(CMAKE_CXX_FLAGS_COMMON
    "${CMAKE_CXX_FLAGS_COMMON}"
    "-std=c++1y -pedantic -Wall -Wextra"
)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_COMMON}
    )
elseif (MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_TBB} /MP /D_SCL_SECURE_NO_WARNINGS /D_CRT_SECURE_NO_WARNINGS")
endif()


# libraries
add_subdirectory(libPLACEHOLDER)

# executables
add_subdirectory(PLACEHOLDER)
add_dependencies(PLACEHOLDER libPLACEHOLDER)

# tests
set(PLACEHOLDER_BUILD_TESTS OFF CACHE BOOL "Build unit tests")
if(${PLACEHOLDER_BUILD_TESTS})
    add_subdirectory(libPLACEHOLDER_tests)
    add_dependencies(libPLACEHOLDER_tests libPLACEHOLDER)
endif()
